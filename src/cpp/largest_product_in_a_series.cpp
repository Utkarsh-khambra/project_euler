#include <catch2/catch_test_macros.hpp>
#include <fmt/core.h>
#include <string>
#include <vector>
/* max_product */
using namespace std::literals;
/* largest_product */
auto s = "7316717653133062491922511967442657474235534919493496983520"
         "3127745063262395"
         "7831801698480186947885184385861560789112949495459501737958"
         "3319528532088055"
         "1112540698747158523863050715693290963295227443043557668966"
         "4895044524452316"
         "1731856403098711121722383113622298934233803081353362766142"
         "8280644448664523"
         "8749303589072962904915604407723907138105158593079608667017"
         "2427121883998797"
         "9087922749219016997208880937766572733300105336788122023542"
         "1809751254540594"
         "7522435258490771167055601360483958644670632441572215539753"
         "6978179778461740"
         "6495514929086256932197846862248283972241375657056057490261"
         "4079729686524145"
         "3510047482166370484403199890008895243450658541227588666881"
         "1642717147992444"
         "2928230863465674813919123162824586178664583591245665294765"
         "4568284891288314"
         "2607690042242190226710556263211111093705442175069416589604"
         "0807198403850962"
         "4554443629812309878799272442849091888458015616609791913387"
         "5499200524063689"
         "9125607176060588611646710940507754100225698315520005593572"
         "9725716362695618"
         "82670428252483600823257530420752963450"sv;
TEST_CASE("8 Largest product in a series", "") {
  std::uint64_t max_product = 1;
  for (size_t i = 0; i < s.size() - 13; ++i) {
    std::uint64_t product = 1;
    for (auto j = 0; j < 13; ++j) {
      if (s[i + j] == '0') {
        product = 0;
        break;
      }
      product *= s[i + j] - 48;
    }
    if (product > max_product) {
      max_product = product;
    }
  }
  REQUIRE(max_product == 23514624000);
}
